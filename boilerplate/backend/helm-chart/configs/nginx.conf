worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile          on;
    server_tokens    off;
    charset        utf-8;
    gzip        on;
    gzip_types  text/plain text/css text/js application/javascript application/x-javascript application/json;

    log_format main '$remote_addr - [$time_iso8601] "$request" $status $bytes_sent t=$request_time s=$request_length "$http_referer" "$http_user_agent"';
    error_log /dev/stdout;

    upstream node-app {
        server 127.0.0.1:8080;
        keepalive 16;
    }

    proxy_cache_path /home1/irteam/apps/nginx/cache levels=1:2 keys_zone=api_cache:10m max_size=1g inactive=10m;

    server {
        listen  80;
        server_name  localhost;
        keepalive_timeout  70;

        access_log /dev/stdout main;

        proxy_set_header   Host                $host;
        proxy_set_header   Connection          ""; # keep-alive를 활용하기 위한 헤더 설정
        proxy_set_header   X-Real-IP           $remote_addr;
        proxy_set_header   X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-By      $server_addr;
        proxy_set_header   X-Forwarded-Proto   $scheme;
        proxy_set_header   X-Forwarded-Host    $server_name;
        proxy_set_header   X-Forwarded-Port    $server_port;

        proxy_http_version 1.1;
        proxy_max_temp_file_size 0;
        proxy_redirect off;
        proxy_read_timeout 240s;
        proxy_ignore_client_abort on;

        location = /basic_status {
            stub_status;
        }

        location = /favicon.ico {
            access_log off;
            empty_gif;
        }

        location = /robots.txt {
            access_log off;
            return 200 "User-agent: *\nDisallow: /\n";
        }

        location / {
            proxy_pass http://node-app;
        }
    }
}
